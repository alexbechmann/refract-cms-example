{
  "name": "razzle-examples-with-typescript",
  "version": "2.4.0",
  "license": "MIT",
  "scripts": {
    "start": "npm-run-all -p docker:start razzle:start",
    "razzle:start": "razzle start",
    "docker:start": "docker-compose up",
    "build": "razzle build",
    "test": "razzle test --env=jsdom",
    "start:prod": "NODE_ENV=production node build/server.js",
    "heroku-postbuild": "node --max-old-space-size=1000 ./node_modules/razzle/bin/razzle.js build"
  },
  "dependencies": {
    "@material-ui/core": "^3.9.2",
    "@material-ui/icons": "^3.0.1",
    "@refract-cms/core": "0.5.2-alpha.272",
    "@refract-cms/dashboard": "0.5.2-alpha.272",
    "@refract-cms/server": "0.5.2-alpha.272",
    "apollo-client": "^2.4.8",
    "babel-polyfill": "^6.26.0",
    "express": "^4.16.4",
    "graphql-request": "^1.8.2",
    "react": "^16.6.3",
    "react-apollo": "^2.5.3",
    "react-dom": "^16.6.3",
    "react-redux": "5.1.1",
    "react-router-dom": "^4.2.2",
    "recompose": "^0.30.0"
  },
  "devDependencies": {
    "@types/express": "^4.11.1",
    "@types/jest": "^22.2.3",
    "@types/node": "9.6.6",
    "@types/react": "^16.3.13",
    "@types/react-dom": "^16.0.5",
    "@types/react-router-dom": "^4.2.6",
    "@types/recompose": "^0.30.5",
    "@types/webpack-env": "^1.13.6",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.15.3",
    "prettier-loader": "^2.1.1",
    "razzle": "^2.4.0",
    "razzle-plugin-typescript": "^2.4.0",
    "ts-jest": "^22.4.5",
    "tslint": "^5.10.0",
    "tslint-config-prettier": "^1.17.0",
    "tslint-react": "^3.6.0",
    "typescript": "^3.2.2",
    "webpack-babel-env-deps": "^1.4.3"
  },
  "jest": {
    "transform": {
      "\\.(ts|tsx)$": "<rootDir>/node_modules/ts-jest/preprocessor.js",
      "\\.css$": "<rootDir>/node_modules/razzle/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|css|json)$)": "<rootDir>/node_modules/razzle/config/jest/fileTransform.js"
    },
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.(ts|js)?(x)",
      "<rootDir>/src/**/?(*.)(spec|test).(ts|js)?(x)"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}"
    ]
  }
}
